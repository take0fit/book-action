# GraphQL schema example
#
# https://gqlgen.com/getting-started/
scalar DateTime
scalar Date

# User Types
type User {
  id: ID!
  nickname: String!
  birthday: Date
  age: Int
  createdAt: DateTime!
  updatedAt: DateTime!
  resources: [Resource!]!
}

# Resource Types
type Resource {
  id: ID!
  userId: ID!
  resourceName: String!
  resourceDetail: String
  resourceCategoryId: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  inputs: [Input!]!
}

# Input Types
type Input {
  id: ID!
  resourceId: ID!
  inputName: String!
  inputDetail: String
  inputCategoryId: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  outputs: [Output!]!
}

# Output Types
type Output {
  id: ID!
  inputId: ID!
  outputName: String!
  outputDetail: String
  outputCategoryId: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

# Query and Mutation
type Query {
  users: [User!]!
  user(id: ID!): User
  resourcesByUserId(userId: ID!): [Resource!]!
  resource(id: ID!): Resource
  inputsByUserId(userId: ID!): [Input!]!
  input(id: ID!): Input
  outputsByUserId(userId: ID!): [Output!]!
  output(id: ID!): Output
}

type Mutation {
  createUser(
    nickname: String!,
    birthday: Date
  ): User!

  createResource(
    userId: String!,
    resourceName: String!,
    resourceDetail: String
    resourceCategoryId: Int!
  ): Resource!

  createInput(
    userId: String!,
    resourceId: String!,
    inputName: String!,
    inputDetail: String,
    inputCategoryId: Int!
  ): Input!

  createOutput(
    userId: String!,
    inputIds: [String!]!,
    outputName: String!,
    outputDetail: String,
    outputCategoryId: Int!
  ): Output!
}

# Common Types
type Error {
  code: Int!
  message: String!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}
